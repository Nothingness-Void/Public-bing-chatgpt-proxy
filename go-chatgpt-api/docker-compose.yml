version: "3"
services:
  go-chatgpt-api:
    container_name: go-chatgpt-api
    image: linweiyuan/go-chatgpt-api
    ports:
      - 8080:8080         # 容器端口映射到宿主机8080端口；宿主机监听端口可按需改为其它端口
    #network_mode: host   # 可选，将容器加入主机网络模式，即与主机共享网络命名空间；上面的端口映射将失效；clash TUN模式下使用此方法
    environment:
      - GO_CHATGPT_API_PROXY=
      #http://host:port      # GO_CHATGPT_API_PROXY=：科学上网代理地址，例如：http://10.0.5.10:7890
      #socks5://host:port    # GO_CHATGPT_API_PROXY=：科学上网代理地址，例如：socks5://10.0.5.10:7890
    restart: unless-stopped
    networks:
      - caddy
    labels:
      caddy: 域名.com # 填写你预先解析到服务器 ip 上的域名
      caddy.reverse_proxy: "{{upstreams 8080}}"
      
  caddy:
    image: lucaslorentz/caddy-docker-proxy:ci-alpine
    ports:
      - 80:80
      - 443:443
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock # 公开 Docker 的套接字文件
      - caddy_data:/data # 存储 Caddy 的持久数据
    environment:
      - CADDY_INGRESS_NETWORKS=caddy # 告诉 Caddy 它可以代理 Docker 网络中的服务
    networks:
      - caddy
    restart: unless-stopped

networks:
  caddy:
    external: true

volumes:
  caddy_data: {}
